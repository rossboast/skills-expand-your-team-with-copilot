name: Feature Request
description: Suggest a new feature or enhancement for the activities management system
title: "[Feature]: "
labels: ["enhancement"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        Thank you for suggesting a new feature! Please describe what you'd like to see added.
        
  - type: textarea
    id: feature-description
    attributes:
      label: Feature Description
      description: What feature would you like to see added?
      placeholder: "e.g., Add a calendar view to see all activities in a monthly calendar format"
    validations:
      required: true
      
  - type: textarea
    id: problem-solving
    attributes:
      label: What problem does this solve?
      description: Explain why this feature would be helpful
      placeholder: "e.g., Teachers need a better way to visualize schedule conflicts and plan activities"
    validations:
      required: true
      
  - type: dropdown
    id: feature-area
    attributes:
      label: What area of the system is this for?
      description: Where should this feature be added?
      options:
        - Activity Management
        - Student Registration
        - User Interface/Display
        - Search and Filtering
        - Authentication/Authorization
        - Reporting/Analytics
        - Data Export/Import
        - Notifications
        - Other (describe below)
    validations:
      required: true
      
  - type: dropdown
    id: user-role
    attributes:
      label: Who would benefit from this feature?
      description: Which users would primarily use this feature?
      multiple: true
      options:
        - Teachers
        - Students
        - Administrators
        - All users
    validations:
      required: true
      
  - type: textarea
    id: proposed-solution
    attributes:
      label: Proposed Solution
      description: How do you envision this feature working?
      placeholder: |
        e.g., 
        1. Add a "Calendar View" button next to the list view
        2. Display activities in a monthly calendar grid
        3. Allow clicking on activities to see details
        4. Show color coding for different activity types
    validations:
      required: true
      
  - type: dropdown
    id: priority
    attributes:
      label: How important is this feature?
      description: What priority would you assign to this?
      options:
        - Critical - Needed immediately for daily operations
        - High - Would significantly improve workflows
        - Medium - Nice to have, would be useful
        - Low - Minor enhancement
    validations:
      required: true
      
  - type: textarea
    id: alternatives
    attributes:
      label: Alternative Solutions
      description: Have you considered any alternative approaches?
      placeholder: "e.g., Could also be solved by better filtering options, or by exporting to external calendar"
    validations:
      required: false
      
  - type: textarea
    id: success-criteria
    attributes:
      label: How would you measure success?
      description: How would you know if this feature is working well?
      placeholder: "e.g., Teachers can schedule activities 50% faster, fewer scheduling conflicts reported"
    validations:
      required: false
      
  - type: textarea
    id: additional-context
    attributes:
      label: Additional Context
      description: Any other information, mockups, examples, or screenshots
      placeholder: "e.g., Similar feature in another app, sketch of desired layout"
    validations:
      required: false
      
  - type: markdown
    attributes:
      value: |
        ---
        ## Acceptance Criteria
        
        For developers, when implementing this feature:
        - The feature should work as described in the proposed solution
        - It should integrate seamlessly with existing functionality
        - The user experience should be intuitive and require minimal training
        - The feature should be responsive and work on different screen sizes
        - Appropriate error handling and validation should be included
        - The feature should be accessible (keyboard navigation, screen readers, etc.)
        - Code should follow existing patterns and conventions
        - Tests should be added if the project has a test suite
        
        ## Implementation Guidance
        
        Consider:
        - What API endpoints might be needed?
        - What database changes are required?
        - What UI components need to be created or modified?
        - How will this interact with authentication/authorization?
        - What edge cases need to be handled?
        - Is this change backward compatible?
        - What documentation needs to be updated?
